syntax = "proto3";
package juno.clock.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "juno/clock/v1/clock.proto";

option go_package = "github.com/CosmosContracts/juno/x/clock/types";

// GenesisState - initial state of module
message GenesisState {
  // Params of this module
  Params params = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "params,omitempty"
  ];
  // contract_addresses stores the list of executable contracts to be ticked on every block.
  repeated ClockContract clock_contracts = 2 [ 
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "contracts,omitempty",
    (gogoproto.moretags) = "yaml:\"contracts\""
  ];
}

// Params defines the set of module parameters.
message Params {
  // contract_gas_limit defines the maximum amount of gas that can be used by a contract.
  uint64 contract_gas_limit = 1 [
    (gogoproto.jsontag) = "contract_gas_limit,omitempty",
    (gogoproto.moretags) = "yaml:\"contract_gas_limit\""
  ];
}
