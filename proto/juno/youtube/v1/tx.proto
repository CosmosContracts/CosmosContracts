syntax = "proto3";
package juno.youtube.v1;

option go_package = "github.com/CosmosContracts/juno/x/youtube/types";

import "cosmos/msg/v1/msg.proto";
import "juno/youtube/v1/content.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Msg defines the Msg service.
service Msg {
  // UpdateParams defines a governance operation for updating the x/youtube module
  // parameters. The authority is hard-coded to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  // rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  rpc UploadMetadata(MsgUploadMetadata) returns (MsgUploadMetadataResponse);

  rpc Upload(MsgUploadContentBlob) returns (MsgUploadContentBlobResponse);
}

message MsgUploadMetadata {
  option (amino.name) = "youtube/MsgUploadMetadata";
  option (cosmos.msg.v1.signer) = "sender";

  // creator
  string sender = 1;

  // From Metadata
  string title = 2 [
    (gogoproto.jsontag) = "title,omitempty",
    (gogoproto.moretags) = "yaml:\"title\""
  ];

  string description = 3 [
    (gogoproto.jsontag) = "description,omitempty",
    (gogoproto.moretags) = "yaml:\"description\""
  ];

  // id start and id end is the range for where your video content is
  uint64 id_start = 4 [
    (gogoproto.jsontag) = "id_start,omitempty",
    (gogoproto.moretags) = "yaml:\"id_start\""
  ];

  uint64 id_end = 5 [
    (gogoproto.jsontag) = "id_end,omitempty",
    (gogoproto.moretags) = "yaml:\"id_end\""
  ];
}

message MsgUploadMetadataResponse {}

message MsgUploadContentBlob {
  option (amino.name) = "youtube/MsgUploadContentBlob";
  option (cosmos.msg.v1.signer) = "sender";

  // When saving data, we prefix it with the sender so that every sender can
  // upload at the same time with unique video ids
  // NOTE: This requires only 1 upload at a time.
  string sender = 1;

  uint64 id_key = 2 [
    (gogoproto.jsontag) = "id_key,omitempty",
    (gogoproto.moretags) = "yaml:\"id_key\""
  ];

  bytes content = 3 [
    (gogoproto.jsontag) = "content,omitempty",
    (gogoproto.moretags) = "yaml:\"content\""
  ];
}

message MsgUploadContentBlobResponse {}

/*
// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the x/youtube parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
*/